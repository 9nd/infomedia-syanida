<?php

if (!defined('BASEPATH'))
	exit('No direct script access allowed');

class Qm_score_model extends CI_Model
{
	public $id;
	function __construct()
	{
		parent::__construct();
	}

	public function json()
	{
		$this->datatables->select('
			*
		');

		$this->datatables->from('qm_score');



		//mengembalikan dalam bentuk array
		$q =  json_decode($this->datatables->generate(), true);
		return $q;
	}


	public function get_all()
	{
		$afield = array(
			'qm_score_parameter.id as id',
			'qm_score_parameter.urutan as urutan',
			'qm_score_parameter.keterangan as keterangan',
			'qm_score_parameter.bobot as bobot',

		);
		$this->db->select($afield);

		$this->db->order_by('qm_score_parameter.id', 'ASC');
		return $this->db->get('qm_score_parameter')->result_array();
	}


	public function get_by_id($id)
	{
		$afield = array(
			'qm_score_parameter.id as id',
			'qm_score_parameter.urutan as urutan',
			'qm_score_parameter.keterangan as keterangan',
			'qm_score_parameter.bobot as bobot',

		);
		$this->db->select($afield);

		$this->db->where('qm_score_parameter.id', $id);
		$this->db->order_by('qm_score_parameter.id', 'ASC');
		return $this->db->get('qm_score_parameter')->row();
	}


	/* Memastikan data yg dibuat tidak kembar/sama,
	   fungsi ini sebagai pengganti fungsi primary key dr db,
	   krn primary key sudah di gunakan untuk column id.
	   -create : id di kosongkan.
	   -update : id di isi dengan id data yg di proses.	
	*/
	function if_exist($id, $data)
	{
		$this->db->where('qm_score_parameter.id <>', $id);

		$q = $this->db->get_where('qm_score_parameter', $data)->result_array();

		if (count($q) > 0) {
			return true;
		} else {
			return false;
		}
	}


	function insert($data)
	{

		/* transaction rollback */
		$this->db->trans_start();

		$this->db->insert('qm_score', $data);
		/* id primary yg baru saja di input*/
		$this->id = $this->db->insert_id();

		$this->db->trans_complete();
		return $this->db->trans_status(); //return true or false
	}

	function update($id, $data)
	{

		/* transaction rollback */
		$this->db->trans_start();

		$this->db->where('qm_score_parameter.id', $id);
		$this->db->update('qm_score_parameter', $data);

		$this->db->trans_complete();
		return $this->db->trans_status(); //return true or false	
	}

	function delete_multiple($data)
	{
		/* transaction rollback */
		$this->db->trans_start();

		if (!empty($data)) {
			$this->db->where_in('qm_score_parameter.id', $data);

			$this->db->delete('qm_score_parameter');
		}

		$this->db->trans_complete();
		return $this->db->trans_status(); //return true or false	

	}
};

/* END */
/* Mohon untuk tidak mengubah informasi ini : */
/* Generated by YBS CRUD Generator 2020-07-10 11:06:05 */
/* contact : YAP BRIDGING SYSTEM 		*/
/*			 bridging.system@gmail.com  */
/* 			 MAKASSAR CITY, INDONESIAN 	*/
